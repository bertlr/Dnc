# This workflow will build a Java project with Ant
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-ant

name: Java CI
on:
  push:
    tags:
      - '*'
permissions: write-all

jobs:
  build:

    runs-on: ubuntu-latest

    name: Create Release
    
    steps:
    - uses: actions/checkout@v4
      name: Checkout project
    
    - uses: actions/setup-java@v4
      name: Set up JDK
      with:
        java-version: '22'
        distribution: 'temurin'
    
    # Setup netbeans distribution directory on github workspace.
    - uses: cjmach/setup-netbeans-action@v2.1
      name: Setup NetBeans distribution
      with:
        version: '22'  
    
    # Run the ant command, with the required NetBeans properties set.
    - name: Run the Ant build target
      run: >-
        ant -noinput -buildfile build.xml
        -Dnbplatform.default.netbeans.dest.dir=${{ github.workspace }}/netbeans
        -Dnbplatform.default.harness.dir=${{ github.workspace }}/netbeans/harness
        -Dcontinue.after.failing.tests=true -Ddo.not.clean.module.config.xml=true clean build
      # Run the ant command, with the required NetBeans properties set.
    - name: Run the Ant build target to create the netbeans module
      run: >-
        ant -noinput -buildfile build.xml
        -Dnbplatform.default.netbeans.dest.dir=${{ github.workspace }}/netbeans
        -Dnbplatform.default.harness.dir=${{ github.workspace }}/netbeans/harness
        -Dcontinue.after.failing.tests=true nbm 
    
    - name: create zip
      run: | 
        zip --junk-paths org-roiderh-dnc build/*.nbm
    
    
    #- uses: actions/upload-artifact@v4
    #  with:
    #    name: netbeans-dnc-nbm-package
    #    path: build/*.nbm

    - name: Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: org-roiderh-dnc.zip
      
#    - name: Upload Release Asset
#      id: upload-release-asset 
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
#        asset_path: ./my-artifact.zip
#        asset_name: my-artifact.zip
#        asset_content_type: application/zip  
